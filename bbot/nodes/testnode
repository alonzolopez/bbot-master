#! /usr/bin/env python

import roslib
import rospy
import actionlib
import random
import sys
from bbot import BBOTTrajectoryClient
from bbot import bbotAnalysis
import math
import numpy as np

from control_msgs.msg import (
	FollowJointTrajectoryAction,
	FollowJointTrajectoryGoal,
	JointTolerance,
)
from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint

if __name__ == '__main__':
	try:
		rospy.init_node('robo_client')
		btj = BBOTTrajectoryClient()
		ikfk = bbotAnalysis()
		# elements at indices 0-5 inclusive correspond to joint commands
		# element at index 6 is the time argument for that waypoint
		# M = np.matrix([
		# 	[0,0,1,0.4357],
		# 	[0,1,0,.1031],
		# 	[-1,0,0,0.1662],
		# 	[0,0,0,1]
		# 	])

		### TESTING IK 
		# ikfk.IK(M,[[-1,1,-1,1]])
		# jtangles = ikfk.iksols.tolist() #puts IK solution into list indices 0-5
		# jtangles[0].append(3.0) #add time arugment at index 6

		pos = []
		ninety = 1.57
		angle = 1.047

		### Two different starting configs. 1 for jts 1, 5, 6 and another for jts 2, 3, 4
		# Joint 1 60 degree turn
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 2.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 20.0])
		# pos.append([angle, 0.0, -ninety, 0.0, 0.0, 0.0, 21.0])
		# pos.append([angle, 0.0, -ninety, 0.0, 0.0, 0.0, 30.0])

		# # Joint 2 60 degrees up
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 2.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 20.0])
		# pos.append([0.0, angle, -ninety, 0.0, 0.0, 0.0, 21.0])
		# pos.append([0.0, angle, -ninety, 0.0, 0.0, 0.0, 30.0])

		# # Joint3 60 degrees up
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 2.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 20.0])
		# pos.append([0.0, 0.0, -ninety+angle, 0.0, 0.0, 0.0, 21.0])
		# pos.append([0.0, 0.0, -ninety+angle, 0.0, 0.0, 0.0, 30.0])

		# # Joint 4 60 degrees up
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 2.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 20.0])
		# pos.append([0.0, 0.0, -ninety, angle, 0.0, 0.0, 21.0])
		# pos.append([0.0, 0.0, -ninety, angle, 0.0, 0.0, 30.0])

		# # Joint 5 60 degrees yaw
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 2.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 20.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, angle, 0.0, 21.0])
		# pos.append([0.0, 0.0, -ninety, 0.0, angle, 0.0, 30.0])

		# # Joint 6 60 degrees roll
		pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 2.0])
		pos.append([0.0, 0.0, -ninety, 0.0, 0.0, 0.0, 20.0])
		pos.append([0.0, 0.0, -ninety, 0.0, 0.0, -angle, 21.0])
		pos.append([0.0, 0.0, -ninety, 0.0, 0.0, -angle, 30.0])



		# pos.append(jtangles[0])

		result = btj.sendPositionTrajectory(pos, 30)
		rospy.loginfo("Completed. error_code: " + str(result))
	except rospy.ROSInterruptException:
		rospy.loginfo("program interrupted before completion")
